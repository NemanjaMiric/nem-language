[Token('IMPORT', 'import', '<stdin>', 3), Token('TEXT', 'test', '<stdin>', 3), Token('FUNCTION', 'function', '<stdin>', 5), Token('SYMBOL', 'fib', '<stdin>', 5), Token('LEFT_BRACKET', '(', '<stdin>', 5), Token('SYMBOL', 'first', '<stdin>', 5), Token('COMMA', ',', '<stdin>', 5), Token('SYMBOL', 'second', '<stdin>', 5), Token('COMMA', ',', '<stdin>', 5), Token('SYMBOL', 'stop', '<stdin>', 5), Token('RIGHT_BRACKET', ')', '<stdin>', 5), Token('LEFT_BRACKET', '(', '<stdin>', 5), Token('WHILE', 'while', '<stdin>', 6), Token('LEFT_BRACKET', '(', '<stdin>', 6), Token('NOT', 'not', '<stdin>', 6), Token('NUMBER', '0', '<stdin>', 6), Token('AND', 'and', '<stdin>', 6), Token('NOT', 'not', '<stdin>', 6), Token('NUMBER', '0', '<stdin>', 6), Token('RIGHT_BRACKET', ')', '<stdin>', 6), Token('LEFT_BRACKET', '(', '<stdin>', 6), Token('IF', 'if', '<stdin>', 7), Token('LEFT_BRACKET', '(', '<stdin>', 7), Token('SYMBOL', 'first', '<stdin>', 7), Token('LESS', '<', '<stdin>', 7), Token('SYMBOL', 'stop', '<stdin>', 7), Token('RIGHT_BRACKET', ')', '<stdin>', 7), Token('LEFT_BRACKET', '(', '<stdin>', 7), Token('SYMBOL', 'temporary', '<stdin>', 8), Token('EQUAL', '=', '<stdin>', 8), Token('SYMBOL', 'first', '<stdin>', 8), Token('SYMBOL', 'first', '<stdin>', 9), Token('EQUAL', '=', '<stdin>', 9), Token('SYMBOL', 'second', '<stdin>', 9), Token('SYMBOL', 'second', '<stdin>', 10), Token('EQUAL', '=', '<stdin>', 10), Token('SYMBOL', 'temporary', '<stdin>', 10), Token('PLUS', '+', '<stdin>', 10), Token('SYMBOL', 'second', '<stdin>', 10), Token('RIGHT_BRACKET', ')', '<stdin>', 11), Token('OTHERWISE', 'otherwise', '<stdin>', 11), Token('BREAK', 'break', '<stdin>', 11), Token('CONTINUE', 'continue', '<stdin>', 12), Token('RIGHT_BRACKET', ')', '<stdin>', 13), Token('RETURN', 'return', '<stdin>', 15), Token('NUMBER', '0', '<stdin>', 15), Token('RIGHT_BRACKET', ')', '<stdin>', 16), Token('SYMBOL', 'fib', '<stdin>', 18), Token('LEFT_BRACKET', '(', '<stdin>', 18), Token('NUMBER', '1', '<stdin>', 18), Token('COMMA', ',', '<stdin>', 18), Token('NUMBER', '1', '<stdin>', 18), Token('COMMA', ',', '<stdin>', 18), Token('NUMBER', '1000', '<stdin>', 18), Token('RIGHT_BRACKET', ')', '<stdin>', 18), Token('SYMBOL', 'a1', '<stdin>', 20), Token('EQUAL', '=', '<stdin>', 20), Token('LEFT_SQUARE', '[', '<stdin>', 20), Token('NUMBER', '1', '<stdin>', 20), Token('COMMA', ',', '<stdin>', 20), Token('NULL', 'null', '<stdin>', 20), Token('COMMA', ',', '<stdin>', 20), Token('TEXT', '"text"', '<stdin>', 20), Token('RIGHT_SQUARE', ']', '<stdin>', 20), Token('SYMBOL', '_0', '<stdin>', 21), Token('EQUAL', '=', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('MINUS', '-', '<stdin>', 21), Token('NUMBER', '0.2', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('NUMBER', '.2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('CARET', '^', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('MODULO', '%', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('ASTERISK', '*', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('MINUS', '-', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('NUMBER', '02', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('CARET', '^', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('MINUS', '-', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('MINUS', '-', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('MINUS', '-', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('CARET', '^', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('SLASH', '/', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('CARET', '^', '<stdin>', 21), Token('LEFT_BRACKET', '(', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('PLUS', '+', '<stdin>', 21), Token('NUMBER', '2', '<stdin>', 21), Token('RIGHT_BRACKET', ')', '<stdin>', 21), Token('SYMBOL', 'b', '<stdin>', 23), Token('EQUAL', '=', '<stdin>', 23), Token('SYMBOL', 'a', '<stdin>', 23), Token('LEFT_SQUARE', '[', '<stdin>', 23), Token('NUMBER', '1', '<stdin>', 23), Token('RIGHT_SQUARE', ']', '<stdin>', 23), Token('FUNCTION', 'function', '<stdin>', 25), Token('SYMBOL', 'a', '<stdin>', 25), Token('LEFT_BRACKET', '(', '<stdin>', 25), Token('RIGHT_BRACKET', ')', '<stdin>', 25), Token('LEFT_BRACKET', '(', '<stdin>', 25), Token('FUNCTION', 'function', '<stdin>', 26), Token('SYMBOL', 'b', '<stdin>', 26), Token('LEFT_BRACKET', '(', '<stdin>', 26), Token('RIGHT_BRACKET', ')', '<stdin>', 26), Token('RETURN', 'return', '<stdin>', 27), Token('LEFT_SQUARE', '[', '<stdin>', 27), Token('NUMBER', '1', '<stdin>', 27), Token('COMMA', ',', '<stdin>', 27), Token('LEFT_SQUARE', '[', '<stdin>', 27), Token('NUMBER', '1', '<stdin>', 27), Token('COMMA', ',', '<stdin>', 27), Token('NUMBER', '2', '<stdin>', 27), Token('COMMA', ',', '<stdin>', 27), Token('LEFT_SQUARE', '[', '<stdin>', 27), Token('NUMBER', '2', '<stdin>', 27), Token('COMMA', ',', '<stdin>', 27), Token('NUMBER', '3', '<stdin>', 27), Token('RIGHT_SQUARE', ']', '<stdin>', 27), Token('RIGHT_SQUARE', ']', '<stdin>', 27), Token('RIGHT_SQUARE', ']', '<stdin>', 27), Token('RETURN', 'return', '<stdin>', 29), Token('SYMBOL', 'b', '<stdin>', 29), Token('RIGHT_BRACKET', ')', '<stdin>', 30), Token('SYMBOL', 'd', '<stdin>', 32), Token('EQUAL', '=', '<stdin>', 32), Token('SYMBOL', 'convert', '<stdin>', 32), Token('LEFT_BRACKET', '(', '<stdin>', 32), Token('SYMBOL', 'a', '<stdin>', 32), Token('LEFT_BRACKET', '(', '<stdin>', 32), Token('RIGHT_BRACKET', ')', '<stdin>', 32), Token('LEFT_BRACKET', '(', '<stdin>', 32), Token('RIGHT_BRACKET', ')', '<stdin>', 32), Token('LEFT_SQUARE', '[', '<stdin>', 32), Token('NUMBER', '1', '<stdin>', 32), Token('RIGHT_SQUARE', ']', '<stdin>', 32), Token('LEFT_SQUARE', '[', '<stdin>', 32), Token('NUMBER', '2', '<stdin>', 32), Token('RIGHT_SQUARE', ']', '<stdin>', 32), Token('LEFT_SQUARE', '[', '<stdin>', 32), Token('NUMBER', '0', '<stdin>', 32), Token('RIGHT_SQUARE', ']', '<stdin>', 32), Token('COMMA', ',', '<stdin>', 32), Token('TEXT', 'number', '<stdin>', 32), Token('RIGHT_BRACKET', ')', '<stdin>', 32), Token('SYMBOL', 'print', '<stdin>', 33), Token('LEFT_BRACKET', '(', '<stdin>', 33), Token('LEFT_SQUARE', '[', '<stdin>', 33), Token('NUMBER', '1', '<stdin>', 33), Token('COMMA', ',', '<stdin>', 33), Token('NUMBER', '2', '<stdin>', 33), Token('RIGHT_SQUARE', ']', '<stdin>', 33), Token('LEFT_SQUARE', '[', '<stdin>', 33), Token('NUMBER', '0', '<stdin>', 33), Token('RIGHT_SQUARE', ']', '<stdin>', 33), Token('RIGHT_BRACKET', ')', '<stdin>', 33), Token('SYMBOL', 'print', '<stdin>', 34), Token('LEFT_BRACKET', '(', '<stdin>', 34), Token('TEXT', 'asd', '<stdin>', 34), Token('LEFT_SQUARE', '[', '<stdin>', 34), Token('NUMBER', '1', '<stdin>', 34), Token('RIGHT_SQUARE', ']', '<stdin>', 34), Token('LEFT_SQUARE', '[', '<stdin>', 34), Token('NUMBER', '0', '<stdin>', 34), Token('RIGHT_SQUARE', ']', '<stdin>', 34), Token('RIGHT_BRACKET', ')', '<stdin>', 34), Token('EOF', None, '<stdin>', 34)]